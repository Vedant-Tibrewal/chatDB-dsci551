
'''
-----------------------------------
 NLP  tested - yes  satisfatory 1 
-------------------------------------'''



"Get the minimum billing cost grouped by insurance provider."

{'SELECT': 'insurance.billingcost, MIN(insurance.billingcost), insurance.insuranceprovider, admissions.insuranceid',
 'FROM': 'admissions\nJOIN insurance ON admissions.insuranceid=insurance.insuranceid \n',
 'WHERE': [],
 'HAVING': [],
 'GROUP BY': 'admissions.insuranceid',
 'ORDER BY': 'insurance.insuranceprovider',
 'LIMIT': -1}

 "Get the maximum billing cost grouped by insurance provider."

 {'SELECT': 'insurance.billingcost, admissions.insuranceid, insurance.insuranceprovider, MAX(insurance.billingcost)',
 'FROM': 'admissions\nJOIN insurance ON admissions.insuranceid=insurance.insuranceid \n',
 'WHERE': [],
 'HAVING': [],
 'GROUP BY': 'admissions.insuranceid',
 'ORDER BY': 'insurance.insuranceprovider DESC',
 'LIMIT': -1}



 "Get the count patients where gender is 'female' grouped by acareleve admission"

 {'SELECT': 'admissions.carelevel, COUNT(admissions.patientid), patients.gender',
 'FROM': 'admissions\nJOIN patients ON admissions.patientid=patients.patientid \n',
 'WHERE': [],
 'HAVING': [{'column': 'gender', 'operator': '=', 'value': 'female'}],
 'GROUP BY': 'admissions.carelevel',
 'ORDER BY': 'admissions.carelevel',
 'LIMIT': -1}
 
 
 "Find count patients where bloodtype is 'A+'."
 
 {'SELECT': 'COUNT(admissions.patientid), patients.bloodtype',
 'FROM': 'patients',
 'WHERE': [],
 'HAVING': [{'column': 'bloodtype', 'operator': '=', 'value': 'A+'}],
 'GROUP BY': -1,
 'ORDER BY': 'patients.bloodtype',
 'LIMIT': -1}


  "Show the admission carelevel and insurance provider of patients"

  {'SELECT': 'admissions.carelevel, insurance.insuranceprovider',
 'FROM': 'admissions\nJOIN insurance ON admissions.insuranceid=insurance.insuranceid \n',
 'WHERE': [],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'insurance.insuranceprovider',
 'LIMIT': -1}
  
  
   "Show the admission carelevel and insurance provider of patients that gender is 'male'"
  {'SELECT': 'admissions.carelevel, insurance.insuranceprovider, patients.gender',
 'FROM': 'admissions\nJOIN patients ON admissions.patientid=patients.patientid \nJOIN insurance ON admissions.insuranceid=insurance.insuranceid \nJOIN patients ON insurance.patientid=patients.patientid \n',
 'WHERE': [{'column': 'gender', 'operator': '=', 'value': 'male'}],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'patients.gender',
 'LIMIT': -1}
  
  
  
  "Get the patient name and admisison discharge date."
  
{'SELECT': 'admissions.admissionid, admissions.dischargedate, patients.patientname, admissions.patientid, patients.disease',
 'FROM': 'admissions\nJOIN patients ON admissions.patientid=patients.patientid \n',
 'WHERE': [],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'admissions.dischargedate',
 'LIMIT': -1}


 "Get the count patients where gender is 'female' grouped by carelevel hospital"
 
 {'SELECT': 'COUNT(hospitals.patientid), patients.gender, hospitals.carelevel',
 'FROM': 'hospitals\nJOIN patients ON hospitals.patientid=patients.patientid \n',
 'WHERE': [],
 'HAVING': [{'column': 'gender', 'operator': '=', 'value': 'female'}],
 'GROUP BY': 'hospitals.carelevel',
 'ORDER BY': 'hospitals.carelevel',
 'LIMIT': -1}
 
 
 
 "Get number of admissions grouped by carelevel."
 
 {'SELECT': 'COUNT(hospitals.admissionid), hospitals.admissionid, hospitals.carelevel',
 'FROM': 'hospitals',
 'WHERE': [],
 'HAVING': [],
 'GROUP BY': 'hospitals.carelevel',
 'ORDER BY': 'hospitals.carelevel',
 'LIMIT': -1}
 
 
 "Get number of admissions grouped by carelevel where gender is 'female'"
 
 {'SELECT': 'COUNT(hospitals.admissionid), hospitals.admissionid, patients.gender, hospitals.carelevel',
 'FROM': 'hospitals\nJOIN patients ON hospitals.patientid=patients.patientid \n',
 'WHERE': [],
 'HAVING': [{'column': 'gender', 'operator': '=', 'value': 'female'}],
 'GROUP BY': 'hospitals.carelevel',
 'ORDER BY': 'patients.gender',
 'LIMIT': -1}
 
 
 "Show patients name where insurance billingcost over 4000."
 
 {'SELECT': 'insurance.billingcost, insurance.patientid, patients.patientname',
 'FROM': 'insurance\nJOIN patients ON insurance.patientid=patients.patientid \n',
 'WHERE': [{'column': 'billingcost', 'operator': '>', 'value': '4000'}],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'insurance.billingcost',
 'LIMIT': -1
 
 "Get the count patients where gender is 'female' grouped by carelevel hospital"
 
 {'SELECT': 'patients.gender, COUNT(hospitals.patientid), hospitals.carelevel',
 'FROM': 'hospitals\nJOIN patients ON hospitals.patientid=patients.patientid \n',
 'WHERE': [{'column': 'gender', 'operator': '=', 'value': 'female'}],
 'HAVING': [],
 'GROUP BY': 'hospitals.carelevel',
 'ORDER BY': 'hospitals.carelevel',
 'LIMIT': -1}
 
 "Find all records from admissions where carelevel is 'Emergency' limit 15 rows."
 {'SELECT': 'hospitals.admissionid, hospitals.carelevel',
 'FROM': 'hospitals',
 'WHERE': [{'column': 'carelevel', 'operator': '=', 'value': 'Emergency'}],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'hospitals.carelevel',
 'LIMIT': '15'}
 
 
 
"Find the total patients where gender is 'male' grouped by  admissions hospital."

{'SELECT': 'hospitals.admissionid, patients.gender, SUM(hospitals.patientid)',
 'FROM': 'hospitals\nJOIN patients ON hospitals.patientid=patients.patientid \n',
 'WHERE': [{'column': 'gender', 'operator': '=', 'value': 'male'}],
 'HAVING': [],
 'GROUP BY': 'hospitals.admissionid',
 'ORDER BY': 'hospitals.admissionid',
 'LIMIT': -1}



 "Find the number of patients where gender is 'male' grouped by  admissions hospital."

{'SELECT': 'hospitals.admissionid, patients.gender, COUNT(hospitals.patientid)',
 'FROM': 'hospitals\nJOIN patients ON hospitals.patientid=patients.patientid \n',
 'WHERE': [{'column': 'gender', 'operator': '=', 'value': 'male'}],
 'HAVING': [],
 'GROUP BY': 'hospitals.admissionid',
 'ORDER BY': 'hospitals.admissionid',
 'LIMIT': -1}


"Find the number of patients where gender is 'male' grouped by  admissions hospital."

{'SELECT': 'hospitals.admissionid, patients.gender, COUNT(hospitals.patientid)',
 'FROM': 'hospitals\nJOIN patients ON hospitals.patientid=patients.patientid \n',
 'WHERE': [{'column': 'gender', 'operator': '=', 'value': 'male'}],
 'HAVING': [],
 'GROUP BY': 'hospitals.admissionid',
 'ORDER BY': 'hospitals.admissionid',
 'LIMIT': -1}


"Find total patients where bloodtype is 'A+'."

{'SELECT': 'patients.bloodtype, SUM(hospitals.patientid)',
 'FROM': 'patients',
 'WHERE': [{'column': 'bloodtype', 'operator': '=', 'value': 'A+'}],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'patients.bloodtype',
 'LIMIT': -1}


" Show all patients where gender equal to 'female' limit 20"

{'SELECT': 'patients.gender',
 'FROM': 'patients',
 'WHERE': [{'column': 'gender', 'operator': '=', 'value': 'female'}],
 'HAVING': [],
 'GROUP BY': -1,
 'ORDER BY': 'patients.gender',
 'LIMIT': '20'}